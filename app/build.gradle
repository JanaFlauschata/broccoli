apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "org.flauschhaus.broccoli"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "0.0.1-" + getDate()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    dataBinding {
        enabled = true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    applicationVariants.all { variant ->
        variant.resValue "string", "versionName", variant.versionName
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.2.1'
    implementation 'androidx.navigation:navigation-ui:2.2.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    def room_version = "2.2.4"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    def fragment_version = "1.2.1"
    implementation "androidx.fragment:fragment:$fragment_version"
    implementation "androidx.fragment:fragment-testing:$fragment_version"

    implementation 'com.google.dagger:dagger:2.26'
    annotationProcessor "com.google.dagger:dagger-compiler:2.26"
    implementation 'com.google.dagger:dagger-android:2.26'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.26'
    implementation 'com.google.dagger:dagger-android-support:2.26'

    testImplementation 'junit:junit:4.12'
    testImplementation "org.robolectric:robolectric:4.3.1"
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.hamcrest:hamcrest-core:1.3'
    testImplementation 'androidx.test.ext:junit:1.1.1'
    testImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    testImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

def getDate() {
    return new Date().format('yyyyMMddHHmmss')
}